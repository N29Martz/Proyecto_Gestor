// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using gestor_archivos_backend.DataBase;

#nullable disable

namespace gestor_archivos_backend.Migrations
{
    [DbContext(typeof(GestorDbContext))]
    [Migration("20240427043552_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("role_claims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("user_claims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("user_logins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("user_roles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Value")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("user_tokens", (string)null);
                });

            modelBuilder.Entity("gestor_archivos_backend.Entities.ArchivoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)")
                        .HasColumnName("id");

                    b.Property<Guid>("CarpetaId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("carpeta_id");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("nombre");

                    b.Property<decimal>("Tamanio")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("tamanio");

                    b.Property<Guid>("TipoArchivoId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("tipo_archivo_id");

                    b.Property<string>("UrlArchivo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("url_archivo");

                    b.HasKey("Id");

                    b.HasIndex("CarpetaId");

                    b.HasIndex("TipoArchivoId");

                    b.ToTable("archivos");
                });

            modelBuilder.Entity("gestor_archivos_backend.Entities.ArchivosUsuariosEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("id");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ArchivoId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("archivo_id");

                    b.Property<Guid>("PermisoId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("permiso_id");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id");

                    b.HasIndex("ArchivoId");

                    b.HasIndex("PermisoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("archivos_usuarios");
                });

            modelBuilder.Entity("gestor_archivos_backend.Entities.CarpetaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)")
                        .HasColumnName("id");

                    b.Property<Guid?>("CarpetaPadreId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("carpeta_padre_id");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id");

                    b.HasIndex("CarpetaPadreId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("carpetas");
                });

            modelBuilder.Entity("gestor_archivos_backend.Entities.CarpetasCompartidasEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("id");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CarpetaId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("carpeta_id");

                    b.Property<Guid>("PermisoId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("permiso_id");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id");

                    b.HasIndex("CarpetaId");

                    b.HasIndex("PermisoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("carpetas_compartidas");
                });

            modelBuilder.Entity("gestor_archivos_backend.Entities.PermisoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)")
                        .HasColumnName("id");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id");

                    b.ToTable("permisos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2a292041-6802-4fbc-8a39-70121011f9c1"),
                            Descripcion = "Lectura"
                        },
                        new
                        {
                            Id = new Guid("bd661d24-0a8d-4d58-b880-5fabdb776ff3"),
                            Descripcion = "Lectura y Escritura"
                        },
                        new
                        {
                            Id = new Guid("bd144632-e8f8-4eea-b526-38ec2cd139db"),
                            Descripcion = "Administrador"
                        });
                });

            modelBuilder.Entity("gestor_archivos_backend.Entities.RolEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("\"NormalizedName\" IS NOT NULL");

                    b.ToTable("roles", (string)null);
                });

            modelBuilder.Entity("gestor_archivos_backend.Entities.TipoArchivoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)")
                        .HasColumnName("id");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id");

                    b.ToTable("tipos_archivos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ba5799c7-5902-4dc9-bd98-9b065082f7ad"),
                            Descripcion = "Documento"
                        },
                        new
                        {
                            Id = new Guid("8ca6b399-5994-42fd-b44a-f156c77fa5b0"),
                            Descripcion = "Imagen"
                        },
                        new
                        {
                            Id = new Guid("b8c55dfe-3fa5-490d-a71b-f0751f918e35"),
                            Descripcion = "Video"
                        },
                        new
                        {
                            Id = new Guid("75d6a169-99d3-466f-9e7b-55a2c58b62c3"),
                            Descripcion = "Audio"
                        },
                        new
                        {
                            Id = new Guid("22813103-832d-414d-81ea-0ed2d618725c"),
                            Descripcion = "Otro"
                        });
                });

            modelBuilder.Entity("gestor_archivos_backend.Entities.UsuarioEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("apellido");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("FechaRegistro")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("fecha_registro");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("NUMBER(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TIMESTAMP(7) WITH TIME ZONE");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("\"NormalizedUserName\" IS NOT NULL");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("gestor_archivos_backend.Entities.VersionesArchivoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("id");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ArchivoId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("archivo_id");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime>("FechaEdicion")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("fecha_edicion");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id");

                    b.HasIndex("ArchivoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("versiones_archivo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("gestor_archivos_backend.Entities.RolEntity", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("gestor_archivos_backend.Entities.UsuarioEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("gestor_archivos_backend.Entities.UsuarioEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("gestor_archivos_backend.Entities.RolEntity", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("gestor_archivos_backend.Entities.UsuarioEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("gestor_archivos_backend.Entities.UsuarioEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("gestor_archivos_backend.Entities.ArchivoEntity", b =>
                {
                    b.HasOne("gestor_archivos_backend.Entities.CarpetaEntity", "Carpeta")
                        .WithMany()
                        .HasForeignKey("CarpetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("gestor_archivos_backend.Entities.TipoArchivoEntity", "TipoArchivo")
                        .WithMany()
                        .HasForeignKey("TipoArchivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carpeta");

                    b.Navigation("TipoArchivo");
                });

            modelBuilder.Entity("gestor_archivos_backend.Entities.ArchivosUsuariosEntity", b =>
                {
                    b.HasOne("gestor_archivos_backend.Entities.ArchivoEntity", "Archivo")
                        .WithMany()
                        .HasForeignKey("ArchivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("gestor_archivos_backend.Entities.PermisoEntity", "Permiso")
                        .WithMany()
                        .HasForeignKey("PermisoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("gestor_archivos_backend.Entities.UsuarioEntity", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Archivo");

                    b.Navigation("Permiso");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("gestor_archivos_backend.Entities.CarpetaEntity", b =>
                {
                    b.HasOne("gestor_archivos_backend.Entities.CarpetaEntity", "CarpetaPadre")
                        .WithMany()
                        .HasForeignKey("CarpetaPadreId");

                    b.HasOne("gestor_archivos_backend.Entities.UsuarioEntity", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarpetaPadre");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("gestor_archivos_backend.Entities.CarpetasCompartidasEntity", b =>
                {
                    b.HasOne("gestor_archivos_backend.Entities.CarpetaEntity", "Carpeta")
                        .WithMany()
                        .HasForeignKey("CarpetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("gestor_archivos_backend.Entities.PermisoEntity", "Permiso")
                        .WithMany()
                        .HasForeignKey("PermisoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("gestor_archivos_backend.Entities.UsuarioEntity", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carpeta");

                    b.Navigation("Permiso");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("gestor_archivos_backend.Entities.VersionesArchivoEntity", b =>
                {
                    b.HasOne("gestor_archivos_backend.Entities.ArchivoEntity", "Archivo")
                        .WithMany()
                        .HasForeignKey("ArchivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("gestor_archivos_backend.Entities.UsuarioEntity", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Archivo");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
